@page "/itemlist"
@rendermode InteractiveAuto

@inject HttpClient HttpClient

<script src="_content/Radzen.Blazor/Radzen.Blazor.js"></script>
<link rel="stylesheet" href="_content/Radzen.Blazor/css/default.css">

<h1>Item List</h1>

<RadzenDataGrid class="pardatagrid" @ref="itemgrid" Data="@_itemlist" TItem="Items" AllowSorting="true" AllowFiltering="true" AllowPaging="true" PageSize="10">
    <Columns>
        <RadzenDataGridColumn TItem="Items" Property="ItemCode" Title="ItemCode" />
        <RadzenDataGridColumn TItem="Items" Property="ItemName" Title="ItemName" />
        <RadzenDataGridColumn TItem="Items" Property="isonBorrow" Title="isonBorrow" />
        <RadzenDataGridColumn TItem="Items" Property="isnotonBorrow" Title="isnotonBorrow" />
        <RadzenDataGridColumn TItem="Items" Property="Servicable" Title="Servicable" />
        <RadzenDataGridColumn TItem="Items" Property="NonServ" Title="NonServ" />
        <RadzenDataGridColumn TItem="Items" Property="Place" Title="Place" />
    </Columns>
</RadzenDataGrid>

@code {
    private List<Items>? _itemlist;
    private RadzenDataGrid<Items> itemgrid;

    protected override async Task OnInitializedAsync()
    {
        var response = await HttpClient.GetAsync("https://localhost:7041/api/Item");
        if (response.IsSuccessStatusCode)
        {
            var json = await response.Content.ReadAsStringAsync();
            _itemlist = JsonConvert.DeserializeObject<List<Items>>(json);
        }
        else
        {
            _itemlist = null;
        }
    }
}
