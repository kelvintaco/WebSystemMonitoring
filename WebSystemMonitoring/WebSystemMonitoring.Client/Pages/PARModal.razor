@using OfficeOpenXml;
@using System.IO
@using Radzen.Blazor;
@rendermode InteractiveAuto

@inject HttpClient HttpClient

<script src="_content/Radzen.Blazor/Radzen.Blazor.js"></script>
<link rel="stylesheet" href="_content/Radzen.Blazor/css/default.css">
<link href="_content/Blazored.Modal/blazored-modal.css" rel="stylesheet" />
<script src="_content/Blazored.Modal/blazored.modal.js"></script>

<h1>PAR Details</h1>

<div>
    <h4>Classification</h4>
    <RadzenCheckBox @bind-Value="IsClassification1" Text="Office Equipment" />
    <RadzenCheckBox @bind-Value="IsClassification2" Text="Furniture & Fixtures" />
    <RadzenCheckBox @bind-Value="IsClassification3" Text="IT Equipment" />
    <RadzenCheckBox @bind-Value="IsClassification4" Text="Other Machinery & Equipment" />
    <RadzenCheckBox @bind-Value="IsClassification5" Text="Communication Equipment" />
</div>

<div>
    <h4>Source of Fund</h4>
    <RadzenCheckBox @bind-Value="IsSourceOfFund1" Text="GF" />
    <RadzenCheckBox @bind-Value="IsSourceOfFund2" Text="SEF" />
    <RadzenCheckBox @bind-Value="IsSourceOfFund3" Text="Trust Fund" />
    <RadzenCheckBox @bind-Value="IsSourceOfFund4" Text="Other" />
    @if (IsSourceOfFund4)
    {
        <input type="text" @bind="OtherSourceOfFund" placeholder="Specify other source of fund" />
    }
</div>

<button class="btn btn-primary mt-2" @onclick="SaveToExcel">Save</button>

@code {
    [Parameter] public string SelectedPar { get; set; }

    private PAR SelectedParData;

    private bool IsClassification1;
    private bool IsClassification2;
    private bool IsClassification3;
    private bool IsClassification4;
	private bool IsClassification5;

    private bool IsSourceOfFund1;
    private bool IsSourceOfFund2;
    private bool IsSourceOfFund3;
    private bool IsSourceOfFund4;
    private string OtherSourceOfFund;

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(SelectedPar))
        {
            var response = await HttpClient.GetAsync($"https://localhost:7041/api/PAR/byParID/{SelectedPar}");
            if (response.IsSuccessStatusCode)
            {
                SelectedParData = await response.Content.ReadFromJsonAsync<PAR>();
            }
        }
    }

    private void SaveToExcel()
    {
        var existingFilePath = @"C:\Users\Admin\Downloads\various-form.xlsx";
        var newFilePath = @"C:\Users\Admin\Downloads\PARData.xlsx";

        var existingFile = new System.IO.FileInfo(existingFilePath);
        var newFile = new System.IO.FileInfo(newFilePath);

        if (!existingFile.Exists)
        {
            Console.WriteLine("Template file not found!");
            return;
        }

        using (var package = new ExcelPackage(existingFile))
        {
            var worksheet = package.Workbook.Worksheets["PAR"];
            if (worksheet == null)
            {
                Console.WriteLine("Worksheet 'PAR' not found!");
                return;
            }

            // Insert selected transaction data
            if (SelectedParData != null)
            {
                worksheet.Cells["F6"].Value = SelectedParData.ParID;
                worksheet.Cells["E9"].Value = SelectedParData.ItemCode;
                worksheet.Cells["C9"].Value = SelectedParData.ItemName;
                worksheet.Cells["E40"].Value = SelectedParData.ParName;
                worksheet.Cells["C36"].Value = SelectedParData.ParDate;
                worksheet.Cells["C35"].Value = SelectedParData.refNo;
                worksheet.Cells["A9"].Value = SelectedParData.ParQty;
            }

            // Insert classification and source of fund values
            if (IsClassification1) worksheet.Cells["A29"].Value = "/";
            if (IsClassification2) worksheet.Cells["A30"].Value = "/";
            if (IsClassification3) worksheet.Cells["A31"].Value = "/";
            if (IsClassification4) worksheet.Cells["A32"].Value = "/";
            if (IsClassification5) worksheet.Cells["A33"].Value = "/";

            if (IsSourceOfFund1) worksheet.Cells["C2"].Value = "Source 1";
            if (IsSourceOfFund2) worksheet.Cells["C3"].Value = "Source 2";
            if (IsSourceOfFund3) worksheet.Cells["C4"].Value = "Source 3";
            if (IsSourceOfFund4) worksheet.Cells["C5"].Value = OtherSourceOfFund;

            package.SaveAs(newFile);
        }
    }
}
