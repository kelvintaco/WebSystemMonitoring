@using Radzen.Blazor
@using MatBlazor
@using Blazored.Modal
@using Blazored.Modal.Services
@using System.Globalization
@using Newtonsoft.Json
@using System.Net.Http
@using System.Net.Http.Json
@using System.Text
@using System.Text.Json
@using OfficeOpenXml
@using System.IO
@page "/masterlist"
@rendermode InteractiveAuto

@inject HttpClient HttpClient
@inject IModalService ModalService

<script src="_content/Radzen.Blazor/Radzen.Blazor.js"></script>
<link rel="stylesheet" href="_content/Radzen.Blazor/css/default.css">
<link href="_content/Blazored.Modal/blazored-modal.css" rel="stylesheet" />
<script src="_content/Blazored.Modal/blazored.modal.js"></script>

<style>
    /* Custom styles for RadzenDataGrid */
    .custom-radzen-grid {
        border-radius: 0.5rem;
        overflow: hidden;
        border: 1px solid #e5e7eb;
        width: 100%;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    }
        .custom-radzen-grid ::deep .rz-datatable-header {
            background-color: #1f2937;
            color: white;
            font-weight: bold;
            padding: 1rem;
            border: none;
        }

        .custom-radzen-grid ::deep .rz-grid-table {
            width: 100%;
            table-layout: fixed;
        }

        .custom-radzen-grid ::deep .rz-datatable-scrollable-header {
            background-color: #1f2937;
        }

        .custom-radzen-grid ::deep .rz-datatable-scrollable-header-box {
            margin-right: 0 !important;
        }

        .custom-radzen-grid ::deep .rz-column-title {
            color: white;
            font-weight: 600;
            white-space: nowrap;
            overflow-x: auto;
            text-overflow: ellipsis;
            font-size: 0.85rem;
        }

        .custom-radzen-grid ::deep .rz-grid-table th {
            background-color: #1f2937;
            border-color: #374151;
            padding: 0.5rem;
        }

        .custom-radzen-grid ::deep .rz-grid-table tr {
            background-color: white;
            transition: background-color 0.2s;
        }

            .custom-radzen-grid ::deep .rz-grid-table tr:hover {
                background-color: #f9fafb;
            }

        .custom-radzen-grid ::deep .rz-grid-table td {
            padding: 0.5rem;
            border-color: #e5e7eb;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            font-size: 0.875rem;
        }

        .custom-radzen-grid ::deep .rz-paginator {
            background-color: #f9fafb;
            border-top: 1px solid #e5e7eb;
            padding: 0.5rem;
            display: flex;
            justify-content: center;
        }

        .custom-radzen-grid ::deep .rz-paginator-element {
            color: #374151;
            font-weight: 500;
            background-color: transparent;
            margin: 0 0.25rem;
        }

            .custom-radzen-grid ::deep .rz-paginator-element:hover:not(.rz-state-disabled) {
                background-color: #e5e7eb;
                color: #111827;
            }

        .custom-radzen-grid ::deep .rz-paginator-page.rz-state-active {
            background-color: #1f2937;
            color: white;
        }

	body {
		overflow-x: hidden;
	}

    .table-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
    }

    .collapse-button {
        background: none;
        border: none;
        color: #1f2937;
        cursor: pointer;
        padding: 0.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 1rem;
    }

    .collapse-button:hover {
        color: #4b5563;
    }

    .collapse-button i {
        transition: transform 0.3s ease;
    }

    .collapse-button.collapsed i {
        transform: rotate(-90deg);
    }

    .table-section {
        transition: all 0.3s ease;
    }

    .table-section.collapsed {
        display: none;
    }
</style>

<div class="table-header">
    <h1 class="text-3xl font-extrabold text-gray-900 tracking-tight flex items-center gap-3">
        <i class="fas fa-table text-blue-700"></i>
        Entry List
    </h1>
    <button class="collapse-button @(isEntryListCollapsed ? "collapsed" : "")" @onclick="ToggleEntryList">
        <i class="fas fa-chevron-down"></i>
        @(isEntryListCollapsed ? "Expand" : "Collapse")
    </button>
</div>

<div class="table-section @(isEntryListCollapsed ? "collapsed" : "")">
    <div class="w-full overflow-hidden mt-6 mb-8">
        <RadzenDataGrid @ref="grid"
                        Data="@TransactList"
                        TItem="PAR"
                        AllowSorting="true"
                        AllowPaging="true"
                        AllowFiltering="true"
                        PageSize="10"
                        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                        FilterMode="FilterMode.Advanced"
                        class="custom-radzen-grid"
                        Responsive="true"
                        Style="width: 100%;">
            <Columns>
                <RadzenDataGridColumn TItem="PAR" Property="ParID" Title="PAR ID" Width="80px" />
                <RadzenDataGridColumn TItem="PAR" Property="ItemCode" Title="Serial" Width="80px" />
                <RadzenDataGridColumn TItem="PAR" Property="ItemName" Title="Item Name" Width="120px" />
                <RadzenDataGridColumn TItem="PAR" Property="ItemDesc" Title="Description" Width="120px" />
                <RadzenDataGridColumn TItem="PAR" Property="ParName" Title="Custodian" Width="120px" />
                <RadzenDataGridColumn TItem="PAR" Property="DprHeadName" Title="Dept Head" Width="120px" />
                <RadzenDataGridColumn TItem="PAR" Property="ParDate" Title="Date" Width="90px" />
                <RadzenDataGridColumn TItem="PAR" Property="Classification" Title="Class" Width="120px" />
                <RadzenDataGridColumn TItem="PAR" Property="FundCls" Title="Fund Source" Width="100px" />
                <RadzenDataGridColumn TItem="PAR" Property="SourceCopies" Title="Dist. Copies" Width="100px" />
                <RadzenDataGridColumn TItem="PAR" Property="refNo" Title="Ref No." Width="80px" />
                <RadzenDataGridColumn TItem="PAR" Property="_value" Title="Value" Width="80px" FormatString="₱{0:N2}" />
                <RadzenDataGridColumn TItem="PAR" Property="ParQty" Title="Quantity" Width="60px" />
            </Columns>
        </RadzenDataGrid>
    </div>
</div>

<div class="table-header">
    <h1 class="text-3xl font-extrabold text-gray-900 tracking-tight flex items-center gap-3">
        <i class="fas fa-table text-blue-700"></i>
        Transfer Records
    </h1>
    <div class="flex items-center gap-3">
        <button class="flex items-center gap-2 bg-blue-200 hover:bg-blue-300 
                       active:bg-blue-400 text-black font-bold py-2 px-4 rounded-lg transition duration-200" @onclick="ShowTransferTable">
            <i class="fas fa-external-link-alt text-blue-700"></i> See All
        </button>
        <button class="collapse-button @(isTransferListCollapsed ? "collapsed" : "")" @onclick="ToggleTransferList">
            <i class="fas fa-chevron-down"></i>
            @(isTransferListCollapsed ? "Expand" : "Collapse")
        </button>
    </div>
</div>

<div class="table-section @(isTransferListCollapsed ? "collapsed" : "")">
    <div class="w-full overflow-hidden mt-6 mb-8">
        <RadzenDataGrid @ref="transfergrid"
                        Data="@TransferList"
                        TItem="Transfer"
                        AllowSorting="true"
                        AllowPaging="true"
                        AllowFiltering="true"
                        PageSize="10"
                        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                        FilterMode="FilterMode.Advanced"
                        class="custom-radzen-grid"
                        Responsive="true"
                        Style="width: 100%;">
            <Columns>
                <RadzenDataGridColumn TItem="Transfer" Property="PtrId" Title="PRT ID" />
                <RadzenDataGridColumn TItem="Transfer" Property="ItemCode" Title="Serial" />
                <RadzenDataGridColumn TItem="Transfer" Property="Description" Title="Description" />
                <RadzenDataGridColumn TItem="Transfer" Property="Name" Title="Name" />
                <RadzenDataGridColumn TItem="Transfer" Property="dateTransferred" Title="Date Transferred" />
                <RadzenDataGridColumn TItem="Transfer" Property="Condition" Title="Condition" />
                <RadzenDataGridColumn TItem="Transfer" Property="TransferType" Title="Transfer Type" />
                <RadzenDataGridColumn TItem="Transfer" Property="from" Title="From" />
                <RadzenDataGridColumn TItem="Transfer" Property="to" Title="To" />
                <RadzenDataGridColumn TItem="Transfer" Property="reason" Title="Reason" />
                <RadzenDataGridColumn TItem="Transfer" Property="Amount" Title="Amount" />
            </Columns>
        </RadzenDataGrid>
    </div>
</div>

<div class="table-header">
    <h1 class="text-3xl font-extrabold text-gray-900 tracking-tight flex items-center gap-3">
        <i class="fas fa-table text-blue-700"></i>
        Item Inventory
    </h1>
    <div class="flex items-center gap-3">
        <button class="flex items-center gap-2 bg-green-200 hover:bg-green-300 
                       active:bg-green-400 text-black font-bold py-2 px-4 rounded-lg transition duration-200" @onclick="ShowAddItem">
            <i class="fas fa-plus text-black-700"></i> Add Item
        </button>
        <button class="collapse-button @(isItemListCollapsed ? "collapsed" : "")" @onclick="ToggleItemList">
            <i class="fas fa-chevron-down"></i>
            @(isItemListCollapsed ? "Expand" : "Collapse")
        </button>
    </div>
</div>

<div class="table-section @(isItemListCollapsed ? "collapsed" : "")">
    <div class="w-full overflow-hidden mt-6 mb-8">
        <RadzenDataGrid @ref="itemgrid"
                        Data="@_itemlist"
                        TItem="Items"
                        AllowSorting="true"
                        AllowPaging="true"
                        AllowFiltering="true"
                        PageSize="10"
                        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                        FilterMode="FilterMode.Advanced"
                        class="custom-radzen-grid"
                        Responsive="true"
                        Style="width: 100%;">
            <Columns>
                <RadzenDataGridColumn TItem="Items" Property="ItemCode" Title="Serial" />
                <RadzenDataGridColumn TItem="Items" Property="ItemName" Title="Name" />
                <RadzenDataGridColumn TItem="Items" Property="ItemDeets" Title="Details" />
                <RadzenDataGridColumn TItem="Items" Property="Stock" Title="Stock" />
                @* <RadzenDataGridColumn TItem="Items" Property="Servicable" Title="Servicable" />
                <RadzenDataGridColumn TItem="Items" Property="NonServ" Title="NonServ" /> *@
                <RadzenDataGridColumn TItem="Items" Property="Place" Title="Place" />
            </Columns>
        </RadzenDataGrid>
    </div>
</div>

<div class="mt-4 border p-4 bg-white rounded-lg shadow-sm">
    <h5 class="text-lg font-bold text-gray-800 mb-2 flex items-center gap-2">
        <i class="fas fa-table-list text-blue-700"></i>
        Other Tables
    </h5>
    <div class="flex flex-wrap gap-3 mb-4">
        <button class="flex items-center gap-2 bg-yellow-200 hover:bg-yellow-300 
                       active:bg-yellow-400 text-black font-bold py-2 px-4 rounded-lg transition duration-200" @onclick="ShowSurrender">
            <i class="fas fa-undo text-yellow-700"></i> Surrendered
        </button>
        <button class="flex items-center gap-2 bg-purple-200 hover:bg-purple-300 
                       active:bg-purple-400 text-black font-bold py-2 px-4 rounded-lg transition duration-200" @onclick="ShowICS">
            <i class="fas fa-file-alt text-purple-700"></i> ICS
        </button>
        @* <button class="flex items-center gap-2 bg-purple-200 hover:bg-purple-300 
                       active:bg-purple-400 text-black font-bold py-2 px-4 rounded-lg transition duration-200" @onclick="ShowArchivesList">
            <i class="fas fa-file-alt text-purple-700"></i> Archives
        </button> *@
        <button class="flex items-center gap-2 bg-purple-200 hover:bg-purple-300 
                       active:bg-purple-400 text-black font-bold py-2 px-4 rounded-lg transition duration-200" @onclick="ShowItemDisposal">
            <i class="fas fa-file-alt text-purple-700"></i> Item Disposal
        </button>
    </div>
</div>

<CascadingBlazoredModal></CascadingBlazoredModal>

@code {
    // public class PAR
    // {
    //     public string ParID { get; set; }
    //     public int ItemCode { get; set; }
    //     public string ItemName { get; set; }
    //     public string ParName { get; set; }
    //     public string DprHeadName { get; set; }
    //     public string ParDate { get; set; }
    //     public string Classification { get; set; }
    //     public string FundCls { get; set; }
    //     public string SourceCopies { get; set; }
    //     public int refNo { get; set; }
    //     public float value { get; set; }
    //     public int ParQty { get; set; }
    // }

    private List<PAR>? TransactList;
    private List<Items>? _itemlist;
    private RadzenDataGrid<Items> itemgrid;
    private RadzenDataGrid<PAR> grid;
    private List<Transfer>? TransferList;
    private RadzenDataGrid<Transfer> transfergrid;

    private bool isEntryListCollapsed = false;
    private bool isTransferListCollapsed = false;
    private bool isItemListCollapsed = false;

    protected override async Task OnInitializedAsync()
    {
        // Load PAR data
        var response = await HttpClient.GetAsync("https://localhost:7041/api/PAR");
        if (response.IsSuccessStatusCode)
        {
            var json = await response.Content.ReadAsStringAsync();
            TransactList = JsonConvert.DeserializeObject<List<PAR>>(json);
        }
        else
        {
            TransactList = new List<PAR>();
        }

        // Load Transfer data
        var transferResponse = await HttpClient.GetAsync("https://localhost:7041/api/Transfer");
        if (transferResponse.IsSuccessStatusCode)
        {
            var json = await transferResponse.Content.ReadAsStringAsync();
            TransferList = JsonConvert.DeserializeObject<List<Transfer>>(json);
        }
        else
        {
            TransferList = new List<Transfer>();
        }

        var itemresponse = await HttpClient.GetAsync("https://localhost:7041/api/Item");
        if (itemresponse.IsSuccessStatusCode)
        {
            var json = await itemresponse.Content.ReadAsStringAsync();
            _itemlist = JsonConvert.DeserializeObject<List<Items>>(json);
        }
        else
        {
            _itemlist = null;
        }
    }

    private void ShowSurrender()
    {
        var options = new ModalOptions
            {
                Size = ModalSize.Automatic
            };
        ModalService.Show<SurrenderTableModal>("Surrender Records", options);
    }

    private void ShowICS()
    {
        var options = new ModalOptions
            {
                Size = ModalSize.Automatic
            };
        ModalService.Show<ICSTableModal>("ICS Records", options);
    }

    private void ShowAddForm()
    {
        var options = new ModalOptions
            {
                Size = ModalSize.Automatic,
                HideCloseButton = true,
                DisableBackgroundCancel = true
            };
        ModalService.Show<AddForm>("", options);
    }
    private void ShowAddItem()
    {
        var options = new ModalOptions
            {
                HideCloseButton = true,
                DisableBackgroundCancel = true
            };
        ModalService.Show<AddItem>("", options);
    }
	// private void ShowArchivesList()
	// {
	// 	var options = new ModalOptions
	// 		{
	// 			HideCloseButton = true,
	// 			Size = ModalSize.Automatic
	// 		};
	// 	ModalService.Show<ArchiveList>("Archives Records", options);
	// }
    private void ShowItemDisposal()
    {
        var options = new ModalOptions
            {
                HideCloseButton = true,
                Size = ModalSize.Automatic
            };
        ModalService.Show<ItemDisposalTable>("Item Disposal", options);
    }

    private void ToggleEntryList()
    {
        isEntryListCollapsed = !isEntryListCollapsed;
        StateHasChanged();
    }

    private void ToggleTransferList()
    {
        isTransferListCollapsed = !isTransferListCollapsed;
        StateHasChanged();
    }

    private void ToggleItemList()
    {
        isItemListCollapsed = !isItemListCollapsed;
        StateHasChanged();
    }

    private void ShowTransferTable()
    {
        var options = new ModalOptions
            {
                Size = ModalSize.Automatic
            };
        ModalService.Show<TransferTableModal>("Transfer Records", options);
    }
}