@using Radzen.Blazor
@using MatBlazor
@using Blazored.Modal
@using Blazored.Modal.Services
@using System.Globalization
@using Newtonsoft.Json
@using System.Net.Http
@using System.Net.Http.Json
@using System.Text
@using System.Text.Json
@using OfficeOpenXml
@using System.IO
@page "/masterlist"
@rendermode InteractiveAuto

@inject HttpClient HttpClient
@inject IModalService ModalService

<script src="_content/Radzen.Blazor/Radzen.Blazor.js"></script>
<link rel="stylesheet" href="_content/Radzen.Blazor/css/default.css">
<link href="_content/Blazored.Modal/blazored-modal.css" rel="stylesheet" />
<script src="_content/Blazored.Modal/blazored.modal.js"></script>

<h1>Master List</h1>

<div class="mt-4 border p-4">
    <h5>Add Entry or Item</h5>
    <div class="column">
        <button class="btn btn-primary mt-2" @onclick="ShowAddForm">Add Entry</button>
		<button class="btn btn-primary mt-2" @onclick="ShowAddItem">Add Item</button>
    </div>
</div>
<div style="width: 90%;">
    <RadzenDataGrid class="pardatagrid" @ref="grid" Data="@TransactList" TItem="PAR" AllowSorting="true" AllowPaging="true" AllowFiltering="true" PageSize="10">
        <Columns>
            <RadzenDataGridColumn TItem="PAR" Property="ParID" Title="PAR ID" Width="100px" />
            <RadzenDataGridColumn TItem="PAR" Property="ItemCode" Title="Item Code" Width="100px" />
            <RadzenDataGridColumn TItem="PAR" Property="ItemName" Title="Item Name" Width="150px" />
            <RadzenDataGridColumn TItem="PAR" Property="ParName" Title="Custodian Name" Width="150px" />
            <RadzenDataGridColumn TItem="PAR" Property="DprHeadName" Title="Department Head" Width="150px" />
            <RadzenDataGridColumn TItem="PAR" Property="ParDate" Title="Date Acquired" Width="120px" />
            <RadzenDataGridColumn TItem="PAR" Property="Classification" Title="Classification" Width="200px" />
            <RadzenDataGridColumn TItem="PAR" Property="FundCls" Title="Source of Fund" Width="150px" />
            <RadzenDataGridColumn TItem="PAR" Property="SourceCopies" Title="Distribution of Copies" Width="200px" />
            <RadzenDataGridColumn TItem="PAR" Property="refNo" Title="Reference No." Width="100px" />
            <RadzenDataGridColumn TItem="PAR" Property="value" Title="Unit Value" Width="100px" FormatString="{0:C}" />
            <RadzenDataGridColumn TItem="PAR" Property="ParQty" Title="Quantity" Width="100px" />
        </Columns>
    </RadzenDataGrid>
</div>

<div class="mt-4 border p-4">
    <h5>Other Tables</h5>
    <div class="column">
        <button class="btn btn-primary mt-2" @onclick="ShowTransfer">Transfer</button>
        <button class="btn btn-primary mt-2" @onclick="ShowSurrender">Surrender</button>
        <button class="btn btn-primary mt-2" @onclick="ShowICS">ICS</button>
    </div>
</div>

<CascadingBlazoredModal></CascadingBlazoredModal>

@code {
    public class PAR
    {
        public string ParID { get; set; }
        public int ItemCode { get; set; }
        public string ItemName { get; set; }
        public string ParName { get; set; }
        public string DprHeadName { get; set; }
        public string ParDate { get; set; }
        public string Classification { get; set; }
        public string FundCls { get; set; }
        public string SourceCopies { get; set; }
        public int refNo { get; set; }
        public float value { get; set; }
        public int ParQty { get; set; }
    }

    private List<PAR>? TransactList;
    private RadzenDataGrid<PAR> grid;

    protected override async Task OnInitializedAsync()
    {
        // Load PAR data
        var response = await HttpClient.GetAsync("https://localhost:7041/api/PAR");
        if (response.IsSuccessStatusCode)
        {
            var json = await response.Content.ReadAsStringAsync();
            TransactList = JsonConvert.DeserializeObject<List<PAR>>(json);
        }
        else
        {
            TransactList = new List<PAR>();
        }
    }

    private void ShowSurrender()
    {
        var options = new ModalOptions
            {
                Class = "custom-large-modal"
            };
        ModalService.Show<SurrenderTableModal>("Surrender Records", options);
    }

    private void ShowTransfer()
    {
        var options = new ModalOptions
            {
                Class = "custom-large-modal"
            };
        ModalService.Show<TransferTableModal>("Transfer Records", options);
    }

    private void ShowICS()
    {
        var options = new ModalOptions
            {
                Class = "custom-large-modal"
            };
        ModalService.Show<ICSTableModal>("ICS Records", options);
    }

    private void ShowAddForm()
    {
        var options = new ModalOptions
            {
                Size = ModalSize.Automatic
            };
        ModalService.Show<AddForm>("", options);
    }
	private void ShowAddItem()
	{
		// var options = new ModalOptions
		// 	{
		// 		Size = ModalSize.Automatic
		// 	};
		ModalService.Show<AddItem>("Add Item");
	}
}